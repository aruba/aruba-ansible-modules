---
- name: "Example playbook for ArubaOS modules"
  hosts: 127.0.0.1
  connection: local
  gather_facts: no

  environment:
    ANSIBLE_ARUBAOS_HOST: "{{ mm_ip }}"
    ANSIBLE_ARUBAOS_USERNAME: "{{ mm_username }}"
    ANSIBLE_ARUBAOS_PASSWORD: "{{ mm_password }}"

  vars:
    config_path: "/md/branch1/floor1"

  tasks:

    - name: Gather facts
      arubaos_facts:
      tags: facts

    - name: Show command
      arubaos_showcommand:
        command: show switches
      tags: showcommand

    - name: Write memory
      arubaos_writememory:
        config_path: "{{ config_path }}"
      tags: writememory

    - name: Get Config
      arubaos_config:
        config_path: "{{ config_path }}"
      tags: config

    - name: Get Config with type filter
      arubaos_config:
        config_path: "{{ config_path }}"
        type: local
      tags: config

    - name: Get objects
      arubaos_get:
        config_path: "{{ config_path }}"
        object: ap_group
      tags: get

    - name: Get with sort
      arubaos_get:
        config_path: "{{ config_path }}"
        object: ap_group
        sort: '-id'
      tags: get

    - name: Get with pagination
      arubaos_get:
        config_path: "{{ config_path }}"
        object: ap_group
        limit: 2
        offset: 2
        total: 10
      tags: get

    - name: Get with object filter
      arubaos_get:
        config_path: "{{ config_path }}"
        object: ap_group
        object_filters:
          - oper: $eq
            values: ['ap_group.ap_sys_prof', 'ap_group.am_filter_prof']
      tags: get

    - name: Get with data filter
      arubaos_get:
        config_path: "{{ config_path }}"
        object: ap_group
        data_filters:
          - param_name: 'ap_group.profile-name'
            oper: $in
            values: ['default']
      tags: get

    - name: Get with data type filter
      arubaos_get:
        config_path: "{{ config_path }}"
        object: ap_group
        data_types: ['non-default']
      tags: get

    - name: Set single object single instance
      arubaos_set:
        config_path: "{{ config_path }}"
        data:
          ap_group:             
            profile-name: "grp-test-ansible-sOsI"
      tags: set

    - name: Set single object multiple instance
      arubaos_set:
        config_path: "{{ config_path }}"
        data:
          ap_group: 
            - profile-name: "grp-test-ansible-1"
            - profile-name: "grp-test-ansible-2"
      tags: set

    - name: Set & commit single object multiple instance
      arubaos_set:
        config_path: "{{ config_path }}"
        data:
          ap_group: 
            - profile-name: "grp-test-ansible-1"
            - profile-name: "grp-test-ansible-2"
        commit: true
      tags: set

    - name: Set multiple object multiple instance
      arubaos_set:
        config_path: "{{ config_path }}"
        data:
          server_group_prof:
            - sg_name: "sg_grp-test_ansible-1"
            - sg_name: "sg_grp-test_ansible-2"
          ap_group: 
            - profile-name: "grp-test-ansible-1"
            - profile-name: "grp-test-ansible-2"
      tags: set

    - name: Set multi-part & commit (continue if error)
      arubaos_set:
        config_path: "{{ config_path }}"
        multipart_data:
          - ap_group:
              profile-name: "grp-test-ansible-3"
          - server_group_prof:
              - sg_name: "sg_grp-test_ansible-1"
              - sg_name: "sg_grp-test_ansible-2"
            ap_group: 
              - profile-name: "grp-test-ansible-1"
              - profile-name: "grp-test-ansible-2"
        commit_force: true
      tags: set
